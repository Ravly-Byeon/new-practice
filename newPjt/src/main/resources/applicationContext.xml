<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">


<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"><!-- 라이브러리 사용 -->
	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/><!-- DB접속정보를 dataSource 객체로 만들고 있ㅇ음 -->
	<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe"/>
	<property name="username"  value="spring"/>
	<property name="password" value="qwer1234"/>
</bean>

<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	<constructor-arg index="0" ref="sqlSession"/>
</bean>

<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<property name="maxUploadSize" value="10485760"/>
</bean>
<!-- <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">라이브러리 사용
	<property name="dataSource" ref="dataSource"/>
	반복되는 JDBCTemplate코드는 스프링이 자동으로 제공해준다. (JDBC 기본 기능 보유) ->접속 정보는 갖고 있지 않으므로 dataSource라는 객체로 만들어주고 JDBCTempalte에게 참조형으로 넘겨준다.
</bean>
 -->	
 
 
 	<context:component-scan base-package="kr.yr.hu.member"/><!-- 패키지에 가서 하위 클래스 중 컴포넌트 어노테이션이 붙은 객체를 생성 -->


</beans>
